#!/usr/bin/env bash
# Professional startup script for Food Truck Adventure

set -e

# Add gem bin to PATH
export PATH="$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH"

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}🚚 Starting Food Truck Adventure...${NC}\n"

# Check if services are already running
if lsof -Pi :3000 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${YELLOW}⚠️  Port 3000 is already in use. Stopping existing services...${NC}"
    ./bin/stop
    sleep 2
fi

# Step 1: Clean up old PID files and stale processes
rm -f tmp/pids/server.pid tmp/pids/sidekiq.pid tmp/pids/foreman.pid 2>/dev/null

# Kill any stale Rails/Puma processes
pkill -f "puma.*3000" 2>/dev/null || true
pkill -f "rails server.*3000" 2>/dev/null || true

# Give processes time to die
sleep 1

# Step 2: Build Tailwind CSS
echo -e "${BLUE}📦 Building Tailwind CSS...${NC}"
bundle exec rails tailwindcss:build

# Step 2: Check PostgreSQL
echo -e "${BLUE}🐘 Checking PostgreSQL...${NC}"
if ! sudo systemctl is-active --quiet postgresql; then
    echo -e "${YELLOW}   Starting PostgreSQL...${NC}"
    sudo systemctl start postgresql
fi

# Step 3: Check Redis
echo -e "${BLUE}🔴 Checking Redis...${NC}"
if ! sudo systemctl is-active --quiet redis-server; then
    echo -e "${YELLOW}   Starting Redis...${NC}"
    sudo systemctl start redis-server
fi

# Step 4: Check database exists
echo -e "${BLUE}🗄️  Checking database...${NC}"
if ! bundle exec rails runner "ActiveRecord::Base.connection" >/dev/null 2>&1; then
    echo -e "${YELLOW}   Creating database...${NC}"
    bundle exec rails db:create db:migrate
fi

# Step 5: Check if food trucks need importing
TRUCK_COUNT=$(bundle exec rails runner "puts FoodTruck.count" 2>/dev/null || echo "0")
if [ "$TRUCK_COUNT" -eq "0" ]; then
    echo -e "${BLUE}🚚 Importing food truck data...${NC}"
    echo -e "${YELLOW}   This may take a minute...${NC}"
    bundle exec rails runner "SfImportWorker.new.perform" >/dev/null 2>&1
    NEW_COUNT=$(bundle exec rails runner "puts FoodTruck.count" 2>/dev/null || echo "0")
    echo -e "${GREEN}   ✓ Imported $NEW_COUNT food trucks${NC}"
fi

# Step 5: Start services in background
echo -e "\n${GREEN}✅ Starting application services...${NC}"
echo -e "${BLUE}   Web server: http://localhost:3000${NC}"
echo -e "${BLUE}   Sidekiq: Background job processor${NC}\n"

# Start Sidekiq in background
bundle exec sidekiq -C config/sidekiq.yml >> log/sidekiq.log 2>&1 &
SIDEKIQ_PID=$!
echo $SIDEKIQ_PID > tmp/pids/sidekiq.pid

# Start Rails server in background (using daemon mode)
bundle exec rails server -p 3000 -d

# Give it a moment to start
sleep 3

echo -e "\n${GREEN}🎉 Food Truck Adventure is running!${NC}"
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "  🌐 Web:     ${BLUE}http://localhost:3000${NC}"
echo -e "  📋 Logs:    ${BLUE}tail -f log/development.log${NC}"
echo -e "  🔄 Sidekiq: ${BLUE}tail -f log/sidekiq.log${NC}"
echo -e "  🛑 Stop:    ${BLUE}./bin/stop${NC}"
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}\n"
